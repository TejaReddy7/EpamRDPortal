@model EPAM.RDPreEducationPortal.Web.Site.Models.AttendanceReportModel
<link href="~/Content/css/tablesorter/theme.blue.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/tablesorter/jquery.tablesorter.js"></script>
@{
    /**/

    ViewBag.Title = "Student Attendance Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script id="js">
    $(function () {

        var $table = $('table'),
            // define pager options
            pagerOptions = {
                // target the pager markup - see the HTML block below
                container: $(".pager"),
                // output string - default is '{page}/{totalPages}';
                // possible variables: {size}, {page}, {totalPages}, {filteredPages}, {startRow}, {endRow}, {filteredRows} and {totalRows}
                // also {page:input} & {startRow:input} will add a modifiable input in place of the value
                output: '{startRow} - {endRow} / {filteredRows} ({totalRows})',
                // if true, the table will remain the same height no matter how many records are displayed. The space is made up by an empty
                // table row set to a height to compensate; default is false
                fixedHeight: true,
                // remove rows from the table to speed up the sort of large tables.
                // setting this to false, only hides the non-visible rows; needed if you plan to add/remove rows with the pager enabled.
                removeRows: false,
                // go to page selector - select dropdown that sets the current page
                cssGoto: '.gotoPage'
            };

        // Initialize tablesorter
        // ***********************
        $table
            .tablesorter({
                theme: 'blue',
                headerTemplate: '{content} {icon}', // new in v2.7. Needed to add the bootstrap icon!
                widthFixed: true,
                widgets: ['zebra', 'filter']
            })

            // initialize the pager plugin
            // ****************************
            .tablesorterPager(pagerOptions);

        // Add two new rows using the "addRows" method
        // the "update" method doesn't work here because not all rows are
        // present in the table when the pager is applied ("removeRows" is false)
        // ***********************************************************************
        var r, $row, num = 50,
            row = '<tr><td>Student{i}</td><td>{m}</td><td>{g}</td><td>{r}</td><td>{r}</td><td>{r}</td><td>{r}</td><td><button type="button" class="remove" title="Remove this row">X</button></td></tr>' +
                '<tr><td>Student{j}</td><td>{m}</td><td>{g}</td><td>{r}</td><td>{r}</td><td>{r}</td><td>{r}</td><td><button type="button" class="remove" title="Remove this row">X</button></td></tr>';
        $('button:contains(Add)').click(function () {
            // add two rows of random data!
            r = row.replace(/\{[gijmr]\}/g, function (m) {
                return {
                    '{i}': num + 1,
                    '{j}': num + 2,
                    '{r}': Math.round(Math.random() * 100),
                    '{g}': Math.random() > 0.5 ? 'male' : 'female',
                    '{m}': Math.random() > 0.5 ? 'Mathematics' : 'Languages'
                }[m];
            });
            num = num + 2;
            $row = $(r);
            $table
                .find('tbody').append($row)
                .trigger('addRows', [$row]);
            return false;
        });

        // Delete a row
        // *************
        $table.delegate('button.remove', 'click', function () {
            // NOTE this special treatment is only needed if `removeRows` is `true`
            // disabling the pager will restore all table rows
            $table.trigger('disablePager');
            // remove chosen row
            $(this).closest('tr').remove();
            // restore pager
            $table.trigger('enablePager');
        });

        // Destroy pager / Restore pager
        // **************
        $('button:contains(Destroy)').click(function () {
            // Exterminate, annhilate, destroy! http://www.youtube.com/watch?v=LOqn8FxuyFs
            var $t = $(this);
            if (/Destroy/.test($t.text())) {
                $table.trigger('destroyPager');
                $t.text('Restore Pager');
            } else {
                $table.tablesorterPager(pagerOptions);
                $t.text('Destroy Pager');
            }
            return false;
        });

        // Disable / Enable
        // **************
        $('.toggle').click(function () {
            var mode = /Disable/.test($(this).text());
            // triggering disablePager or enablePager
            $table.trigger((mode ? 'disable' : 'enable') + 'Pager');
            $(this).text((mode ? 'Enable' : 'Disable') + ' Pager');
            return false;
        });
        $table.bind('pagerChange', function () {
            // pager automatically enables when table is sorted.
            $('.toggle').text('Disable Pager');
        });

    });</script>
@{
    //var chart = new Chart(width: 300, height: 200)
    //       .AddSeries(chartType: "bar", axisLabel:"Y",
    //xValue: new[] { "BVRIT ", "50", "30 ", "70" },
    //                       yValues: new[] { "50", "70", "90", "110" })
    //                       .Write("png");
    //var key = new Chart(400, 200, ChartTheme.Blue)

    //      .AddTitle("Price enquiries")

    //     .DataBindTable(Model, "X")

    //   .Write("png");
}
<div class="form-horizontal">
    <div class="contentContainer upsaMinSize upsaMaxSize default-color">
        <div class="content-wrap">
            <div style="margin-bottom:200px">
                <div class="two-column-wrap">
                    @*<div class="two-col-left">

        </div>*@
                    <div class="two-col-left">
                        <div class="tc-property-section">

                            <table class="tc-property-table">
                                <thead>
                                    <tr>
                                        <th colspan="2">
                                            Students Attendence REPORT Collegewise
                                        </th>
                                        <th>
                                            <i id="future-workload-switcher" class="section-collapse-icon icon-angle-up"></i>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody class="tc-table-header compact-table workload-table">
                                    <tr>
                                        <td></td>
                                        @{
                                            var list = Model.GetAttendanceCollegewise();
                                        }
                                        @foreach (var date in list.Select(x => x.WebinarStartDate).Distinct().ToList())
                                        {
                                            <td colspan="2">
                                                @date
                                            </td>
                                        }
                                    </tr>
                                </tbody>
                                <tbody class="tc-table-header compact-table workload-table">
                                    <tr>
                                        <td></td>
                                        @foreach (var date in list.Select(x => x.WebinarStartDate).Distinct().ToList())
                                        {
                                            <td>
                                                Registered
                                            </td>
                                            <td>
                                                Attended
                                            </td>
                                        }
                                    </tr>
                                </tbody>
                                <tbody class="general-info-table compact-table workload-table">
                                    @foreach (var collegeId in list.Select(x => x.CollegeId).Distinct().ToList())
                                    {
                                        <tr>
                                            @{
                                                int count = 0;
                                                foreach (var item in list.Where(x => x.CollegeId == collegeId))
                                                {
                                                    if (count == 0)
                                                    {
                                                        <td>
                                                            <a title="Resource plan of EPM-GOOG" class="">
                                                                @item.CollegeName
                                                            </a>
                                                        </td>
                                                    }
                                                    <td id="w_EPM-GOOG_201901030000">
                                                        @item.NoOfStudentsRegistered
                                                    </td>

                                                    <td id="w_EPM-GOOG_201901030000">
                                                        @item.NoOfStudentsAttended
                                                    </td>
                                                    @*}  *@
                                                    count++;
                                                }
                                            }
                                        </tr>

                                    }

                                    @*<tr class="total-row">
                            <td align="right">Total</td>
                            <td id="w_fte_201901030000">
                                3.00
                            </td>
                            <td id="w_fte_201901030000">
                                3.00
                            </td>
                        </tr>*@
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="two-column-wrap">
                    @*<div class="two-col-left">

                        </div>*@
                    <div class="two-col-left">
                        <div class="tc-property-section">
                            @{
                                var listStudentwise = Model.GetAttendanceStudentwise();
                                var columnCount = listStudentwise.Where(x => x.WebinarStartDate != "").Select(x => x.WebinarStartDate).Distinct().Count();
                            }
                            <table class="tc-property-table">
                                <thead>
                                    <tr>
                                        <th colspan="3">
                                            <a href="/AttendanceReport/ExporttoExcelStudentWise"><img src="~/Content/Images/excel-logo-1.jpeg" style="width:30px;height:30px;padding-right:5px" alt="Click here to download the excel" /></a>  Student Wise
                                        </th>
                                    </tr>
                                </thead>
                                <tbody class="tc-table-header compact-table workload-table">
                                    <tr>
                                        <td>Student Name</td>
                                        <td>Email</td>
                                        <td>College Name</td>

                                        @foreach (var date in listStudentwise.Where(x => x.WebinarStartDate != "").Select(x => x.WebinarStartDate).Distinct().ToList())
                                        {
                                            <td colspan="2">
                                                @date
                                            </td>
                                        }
                                        <td>
                                            Total Sessions
                                        </td>
                                        <td>
                                            Registered Sessions
                                        </td>
                                        <td>
                                            Attended Sessions
                                        </td>
                                    </tr>
                                </tbody>
                                <tbody class="tc-table-header compact-table workload-table">
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        @for (int i = 0; i < columnCount; i++)
                                        {
                                            <td>
                                                Registered
                                            </td>
                                            <td>
                                                Attended
                                            </td>
                                        }
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                </tbody>
                                <tbody class="general-info-table compact-table workload-table">

                                    @foreach (var studentId in listStudentwise.Select(x => x.StudentId).Distinct().ToList())
                                    {
                                        <tr>
                                            @{
                                                int count = 0;
                                                int registeredCount = 0;
                                                int attendedCount = 0;
                                                foreach (var item in listStudentwise.Where(x => x.StudentId == studentId).ToList())
                                                {
                                                    if (count == 0)
                                                    {
                                                        <td>
                                                            <a title="Resource plan of EPM-GOOG" class="">
                                                                @item.StudentName
                                                            </a>
                                                        </td>
                                                        <td>
                                                            <a title="Resource plan of EPM-GOOG" class="">
                                                                @item.Email
                                                            </a>
                                                        </td>
                                                        <td>
                                                            <a title="Resource plan of EPM-GOOG" class="">
                                                                @item.CollegeName
                                                            </a>
                                                        </td>
                                                    }
                                                    <td>
                                                        @if (item.WebinarRegistrationDate != "")
                                                        {
                                                            registeredCount++;
                                                            <label>Yes</label>
                                                        }
                                                        else
                                                        {
                                                            <label style="color: red">No</label>
                                                        }
                                                    </td>

                                                    <td>
                                                        @if (item.AttendedId != null)
                                                        {
                                                            attendedCount++;
                                                            <label>Yes</label>
                                                        }
                                                        else
                                                        {
                                                            <label style="color: red">No</label>
                                                        }
                                                    </td>
                                                    @*}  *@
                                                    count++;
                                                }
                                                for (int i = count; i < columnCount; i++)
                                                {
                                                    <td> <label style="color: red">No</label></td>
                                                    <td> <label style="color: red">No</label></td>
                                                }
                                            }
                                            <td>@columnCount</td>
                                            <td>@registeredCount</td>
                                            <td>@attendedCount</td>
                                        </tr>

                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>