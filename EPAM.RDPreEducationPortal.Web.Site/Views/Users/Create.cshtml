@model EPAM.RDPreEducationPortal.Web.Site.EntityFramework.User

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <h2>User Creation</h2>
    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success" role="alert">
            <strong>Well done!</strong> @Model.SuccessMessage.
        </div>
    }
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Email)
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.RoleId)
                    @Html.DropDownListFor(model => model.RoleId, new SelectList(Enumerable.Empty<SelectListItem>(), "RoleId", "RoleName"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.FirstName)
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.LastName)
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.GenderId)
                    @Html.DropDownListFor(model => model.GenderId, new SelectList(Enumerable.Empty<SelectListItem>(), "RecruitmentId", "Name"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.ContactNumber)
                    @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 float-right">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $.getJSON("/Roles/List",
            function (classesData) {
                var select = $("#RoleId");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "Select a Role"
                }));
                $.each(classesData, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.RoleId,
                        text: itemData.RoleName
                    }));
                });
            });
        $.getJSON("/Gender/List",
            function (classesData) {
                var select = $("#GenderId");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "Select a Gender"
                }));
                $.each(classesData, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.GenderId,
                        text: itemData.Gender
                    }));
                });
            });
    });
</script>


